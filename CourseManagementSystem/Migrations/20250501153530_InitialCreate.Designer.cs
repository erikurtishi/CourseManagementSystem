// <auto-generated />
using System;
using CourseManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CourseManagementSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250501153530_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CourseManagementSystem.Models.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Instructor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5022858f-eaf2-4735-8be5-bdea19e16979"),
                            Description = "Basic Algebra and Calculus",
                            Instructor = "Prof. Newton",
                            Title = "Math 101"
                        },
                        new
                        {
                            Id = new Guid("0845e442-4f64-455d-b156-c424a40c1e88"),
                            Description = "Mechanics and Thermodynamics",
                            Instructor = "Prof. Einstein",
                            Title = "Physics 201"
                        });
                });

            modelBuilder.Entity("CourseManagementSystem.Models.Enrollment", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uuid");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("b6756c5b-00f2-4a72-b059-c483ac8191ca"),
                            CourseId = new Guid("5022858f-eaf2-4735-8be5-bdea19e16979")
                        },
                        new
                        {
                            StudentId = new Guid("e8c5a032-1f06-4d0f-a947-db726f9b8a45"),
                            CourseId = new Guid("0845e442-4f64-455d-b156-c424a40c1e88")
                        },
                        new
                        {
                            StudentId = new Guid("b6756c5b-00f2-4a72-b059-c483ac8191ca"),
                            CourseId = new Guid("0845e442-4f64-455d-b156-c424a40c1e88")
                        });
                });

            modelBuilder.Entity("CourseManagementSystem.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b6756c5b-00f2-4a72-b059-c483ac8191ca"),
                            Email = "alice@school.edu",
                            Name = "Alice Smith"
                        },
                        new
                        {
                            Id = new Guid("e8c5a032-1f06-4d0f-a947-db726f9b8a45"),
                            Email = "bob@school.edu",
                            Name = "Bob Johnson"
                        });
                });

            modelBuilder.Entity("CourseManagementSystem.Models.Enrollment", b =>
                {
                    b.HasOne("CourseManagementSystem.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseManagementSystem.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CourseManagementSystem.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("CourseManagementSystem.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
